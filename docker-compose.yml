x-environment: &x-environment
  PROXY_SERVER: https://bobcatdev.library.nyu.edu:443
  VIEW: ${VIEW-NYU}
  NODE_ENV: ${NODE_ENV-development}
  VE:
  SAML:
  CAS:
  PACK:

x-build: &x-build
  build:
    context: .
    cache_from:
      - primo-explore-views
      - "quay.io/nyulibraries/primo-explore-views"
      - "quay.io/nyulibraries/primo-explore-views:${BRANCH_NO_SLASH}"
x-ports: &x-ports
  ports:
    - 8004:8004
    - 3001:3001

version: '3.7'
services:
  # Dockerfile that uses production versions of dependencies from npm/yarn registries
  # VIEW=[VIEW-NAME] NODE_ENV=[env] docker-compose up web
  web:
    <<: *x-build
    image: primo-explore-views
    <<: *x-ports
    environment:
      <<: *x-environment
    # volumes:
    #   - ./custom:/app/primo-explore/custom/

  unit-test:
    build:
      context: .
      dockerfile: ./custom/spec/Dockerfile
    image: primo-explore-views-unit-test
    # volumes:
    #   - ./custom:/app/custom/

  # Runs tests using production version dependencies
  # NODE_ENV=test will produce a production-like environment, including minified assets and a devserver without hot module reload
  # VIEW=[VIEW-NAME] NODE_ENV=[env] docker-compose up web-test
  web-test:
    <<: *x-build
    image: primo-explore-views
    environment:
      <<: *x-environment
      NODE_ENV: test
    <<: *x-ports
    # volumes:
    # - ./custom:/app/primo-explore/custom/

  # Creates VIEW packages using production version dependencies
  # Builds to /app/packages
  # VIEW=[VIEW-NAME] NODE_ENV=[env] docker-compose create-package
  create-package:
    <<: *x-build
    image: primo-explore-views
    environment:
      <<: *x-environment
      NODE_ENV: ${NODE_ENV-staging}
      PACK: 'true'
    command: yarn build
    # volumes:
    # - ./packages/:/app/packages
    # - ./custom:/app/primo-explore/custom/

  # Runs e2e tests against the web-test service (defined above)
  # Uses only production version of modules published on NPM
  # VIEW=[VIEW-NAME] docker-compose run e2e
  e2e:
    image: primo-explore-e2e-cypress
    build:
      context: primo-explore-e2e-cypress
      cache_from:
      - primo-explore-e2e-cypress
      - "quay.io/nyulibraries/primo-explore-e2e-cypress"
      - "quay.io/nyulibraries/primo-explore-e2e-cypress:${BRANCH_NO_SLASH}"
    depends_on:
      - web-test
    environment:
      <<: *x-environment
      DOMAIN: http://web-test:8004/primo-explore/search
      NODE_ENV: test
      CYPRESS_BASE_URL: http://web-test:8004/primo-explore/
    # volumes:
    # - ./primo-explore-e2e-cypress/cypress/:/app/cypress
    # - ./custom:/app/primo-explore/custom/


  # Dockerfile that relies on local symlink to 'modules' if required version matches current version
  # Has been separated from "web" so that by default only production-ready versions of packages are delivered
  # Also, this is a much larger image since entire file tree must be copied over,
  # and all development dependencies must be installed
  # In order to actively develop with modules, mount the "modules" folder as a volume
  # Webpack devserver must be restarted each time for a recompiled module to be rebundled into the package
  # VIEW=[VIEW-NAME] NODE_ENV=[env] docker-compose up web-dev-modules
  web-dev-modules:
    build:
      context: .
      dockerfile: modules/Dockerfile
    image: primo-explore-views_modules
    <<: *x-ports
    environment:
      <<: *x-environment
    volumes:
    # drastically speeds up re-installation processes by mounting node_modules and yarn cache directory
    # to re-transpile a local dependency without restarting the service, run doker-compose exec sh -c 'cd /app/primo-explore/ && yarn prepare'
    - yarn_cache:/yarn
    - node_modules_cache:/app/primo-explore/node_modules
    - ./custom:/app/primo-explore/custom/
    - ./modules:/app/primo-explore/modules/

  yarn:
    image: node:12
    working_dir: /app
    entrypoint: ["yarn"]
    volumes:
      - ./:/app

volumes:
  yarn_cache:
  node_modules_cache:
